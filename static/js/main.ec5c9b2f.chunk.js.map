{"version":3,"sources":["components/Continuewith/Continuewith.js","lib/firebase.js","components/Participant/Participant.js","components/ChatRoom/useChatRoom.js","components/ChatRoom/Image.js","components/ChatRoom/ChatRoom.js","components/MenuBar/MenuBar.js","components/Room/Room.js","components/Home/home.js","App.js","index.js"],"names":["Continuewith","state","isSignedIn","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","className","this","firebaseAuth","Component","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Participant","participant","totalParticipant","currentUser","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","length","Box","sx","backgroundColor","p","identity","boxShadow","ref","autoPlay","NEW_MESSAGE_EVENT","useChatRoom","roomId","messages","setMessages","socketRef","socketIOClient","query","message","incomingMessage","isOwner","senderId","id","disconnect","sendMessage","messageBody","file","emit","body","type","mimeType","fileName","name","Image","props","imageSrc","setImageSrc","reader","FileReader","readAsDataURL","blob","onloadend","result","style","width","height","src","alt","Room","useChat","newMessage","setNewMessage","setFile","setChosenEmoji","displayEmoji","setDisplayEmoji","messageRef","handleSendMessage","console","log","scrollIntoView","behavior","AppBar","position","color","background","alignItems","Typography","variant","component","flexGrow","i","Blob","componentDecorator","decoratedHref","decoratedText","href","onEmojiClick","event","emojiObject","emoji","htmlFor","accept","onChange","e","target","files","display","multiple","IconButton","PhotoCamera","onClick","placeholder","value","onKeyUp","key","MenuBar","handleLogout","handleAudioMute","handleAudioUnmute","handleVideoMute","handleVideoUnmute","showChat","roomName","handleScreenShare","audio","setAudio","camera","setCamera","setMessage","screenSharing","setScreenSharing","openSnackbar","setOpenSnackbar","iconOfSnackBar","Fragment","m","borderRadius","justifyContent","Button","navigator","clipboard","writeText","Snackbar","open","autoHideDuration","onClose","reason","action","room","handleScreenShareStart","handleScreenShareStop","screenTrack","participants","setParticipants","displayChat","setDisplayChat","displayShareScreen","setDisplayShareScreen","sizeofgrid1","setsizeofgrid1","sizeofgrid2","setsizeofgrid2","marginMenuBar","setMarginMenuBar","participantConnected","prevParticipants","participantDisconnected","forEach","off","remoteParticipants","sid","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","text","secondary","Grid","container","item","xs","columns","localParticipant","mt","displayScreen","require","createLocalVideoTrack","createTheme","useStyles","makeStyles","large","Home","setCurrentUser","setAppState","anchorEl","Date","setDate","setRoomName","setRoom","username","setUsername","useHistory","Boolean","displayName","charAt","toUpperCase","isAnonymous","setInterval","React","backDropOpen","setBackDropOpen","handleSubmit","useCallback","fetch","method","JSON","stringify","headers","then","res","json","data","Video","connect","token","catch","err","error","prevRoom","tracks","trackPub","stop","tidyUp","persisted","window","addEventListener","removeEventListener","disable","enable","mediaDevices","getDisplayMedia","stream","LocalVideoTrack","getTracks","publishTrack","alert","uuid","now","Math","floor","random","toString","slice","substring","VideoCallOutlined","TextField","InputProps","startAdornment","InputAdornment","Keyboard","endAdornment","disabled","updateProfile","delete","signOut","Backdrop","zIndex","drawer","CircularProgress","App","appState","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec5c9b2f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\nimport \"./Continuewith.css\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\n// import logo from \"../../images/X-oo.svg\";\n\nclass Continuewith extends Component {\n  state = { isSignedIn: false };\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false,\n    },\n  };\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSignedIn: !!user });\n      // console.log(\"user\", user);\n    });\n  };\n\n  render() {\n    const anonSignIn = () => {\n      // [START auth_anon_sign_in]\n      firebase\n        .auth()\n        .signInAnonymously()\n        .then(() => {\n          // Signed in..\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          // ...\n        });\n      // [END auth_anon_sign_in]\n    };\n\n    return (\n      <div className=\"continueWith\">\n        {this.state.isSignedIn ? (\n          <span></span>\n        ) : (\n          <div className=\"continueWith__content\">\n            <p className=\"continueWith__title\">Sign in</p>\n            <p className=\"continueWith__subtitle\">Continue to Joins</p>\n\n            <StyledFirebaseAuth\n              uiConfig={this.uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n\n            {/* <div className=\"continueWith__try_text\">Try demo</div>\n            <button\n              className=\"firebaseui-idp-button mdl-button mdl-js-button mdl-button--raised firebaseui-id-idp-button\"\n              style={{ backgroundColor: \"red\" }}\n              data-upgraded=\",MaterialButton\"\n              onClick={anonSignIn}\n            >\n              <span class=\"firebaseui-idp-icon-wrapper\">\n                <AccountCircleIcon\n                  style={{ color: \"white\", verticalAlign: \"middle\" }}\n                />\n              </span>\n              <span class=\"firebaseui-idp-text firebaseui-idp-text-long\">\n                Sign in As Guest\n              </span>\n              <span class=\"firebaseui-idp-text firebaseui-idp-text-short\">\n                Guest\n              </span>\n            </button> */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Continuewith;\n","import firebase from \"firebase\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAswSs5I_Ow2zqhEKy1cfpZTLS8sy7PYsA\",\n  authDomain: \"meeting-3ecfa.firebaseapp.com\",\n  projectId: \"meeting-3ecfa\",\n  storageBucket: \"meeting-3ecfa.appspot.com\",\n  messagingSenderId: \"940410080677\",\n  appId: \"1:940410080677:web:dad8c866e2b666c92c6c4c\",\n  measurementId: \"G-7QHJGCKWLK\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Participant.css\";\nimport Box from \"@mui/material/Box\";\n// import Grid from \"@mui/material/Grid\";\n// import { useAppContext } from \"../../context/appContext\";\n// import { useRoomContext } from \"../../context/videoContext\";\n\nconst Participant = ({ participant, totalParticipant, currentUser }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  // const { videoON } = useRoomContext();\n  // const { currentUser } = useAppContext();\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div\n      className={`participant ${\n        totalParticipant?.length === 0 && \"one_participant\"\n      }`}\n    >\n      <p className=\"participant-name\">\n        <Box sx={{ backgroundColor: \"rgba(0,0,0,.4)\", p: 0.4 }}>\n          {participant.identity === currentUser ? \"You\" : participant.identity}\n        </Box>\n      </p>\n      <Box sx={{ boxShadow: 24 }}>\n        <video ref={videoRef} autoPlay={true} />\n        <audio ref={audioRef} autoPlay={true} />\n      </Box>\n    </div>\n  );\n};\n\nexport default Participant;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst NEW_MESSAGE_EVENT = \"new-message-event\";\nconst SOCKET_SERVER_URL = \"https://trishul-meeting-server.herokuapp.com/\";\n// const SOCKET_SERVER_URL = \"localhost:3030\";\n\nconst useChatRoom = (roomId) => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    socketRef.current.on(NEW_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        isOwner: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = (messageBody, file) => {\n    if (file) {\n      socketRef.current.emit(NEW_MESSAGE_EVENT, {\n        body: file,\n        type: \"file\",\n        mimeType: file.type,\n        fileName: file.name,\n        senderId: socketRef.current.id,\n      });\n    } else {\n      socketRef.current.emit(NEW_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: socketRef.current.id,\n      });\n    }\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChatRoom;\n","import React, { useState, useEffect } from \"react\";\n// import \"./Image.css\"\n\nfunction Image(props) {\n  const [imageSrc, setImageSrc] = useState(\"\");\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(props.blob);\n    reader.onloadend = function () {\n      setImageSrc(reader.result);\n    };\n  }, [props.blob]);\n\n  return (\n    <img\n      className=\"image\"\n      style={{ width: 150, height: \"auto\" }}\n      src={imageSrc}\n      alt={props.fileName}\n    />\n  );\n}\n\nexport default Image;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { SecureLink } from \"react-secure-link\";\n\nimport useChat from \"./useChatRoom\";\nimport \"./ChatRoom.css\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { PhotoCamera } from \"@mui/icons-material\";\n// import AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport { IconButton } from \"@mui/material\";\nimport InsertEmoticonSharpIcon from \"@mui/icons-material/InsertEmoticonSharp\";\nimport Image from \"./Image\";\nimport Picker from \"emoji-picker-react\";\nimport Linkify from \"react-linkify\";\n\nconst Room = ({ roomId }) => {\n  // const { roomId } = props.match.params;\n  const { messages, sendMessage } = useChat(roomId);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState();\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const [displayEmoji, setDisplayEmoji] = useState(\"notDisplayEmoji\");\n  const messageRef = useRef();\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    console.log(newMessage);\n    if (newMessage !== \"\") {\n      sendMessage(newMessage, file);\n      setNewMessage(\"\");\n      setFile();\n      setDisplayEmoji(\"notDisplayEmoji\");\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  const selectFile = (e) => {\n    setNewMessage(e.target.files[0].name);\n    setFile(e.target.files[0]);\n  };\n\n  const renderMessages = (message, i) => {\n    if (message.type === \"file\") {\n      const blob = new Blob([message.body], { type: message.type });\n      return (\n        <div\n          key={i}\n          className={message.isOwner ? \"my-message\" : \"received-message\"}\n        >\n          <div className=\"msgBody\">\n            <Image fileName={message.fileName} blob={blob} />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        key={i}\n        className={message.isOwner ? \"my-message\" : \"received-message\"}\n      >\n        <div className=\"msgBody\">\n          <Linkify\n            componentDecorator={(decoratedHref, decoratedText) => (\n              <SecureLink href={decoratedHref}>{decoratedText}</SecureLink>\n            )}\n          >\n            {message.body}\n          </Linkify>\n        </div>\n      </div>\n    );\n  };\n\n  const onEmojiClick = (event, emojiObject) => {\n    setNewMessage(newMessage + emojiObject.emoji);\n    setChosenEmoji(emojiObject);\n  };\n\n  const disEmoji = () => {\n    if (displayEmoji === \"notDisplayEmoji\") setDisplayEmoji(\"displayEmoji\");\n    else if (displayEmoji === \"displayEmoji\")\n      setDisplayEmoji(\"notDisplayEmoji\");\n  };\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  return (\n    // <div className=\"msg_container\">\n    <div className=\"chatbox\">\n      <div className=\"chatRoomMain\">\n        {/* <div className=\"group_chat_bar\">\n          <span className=\"group_chat_title\">Chats</span>\n        </div> */}\n        <AppBar\n          position=\"static\"\n          sx={{ height: 40, color: \"black\", background: \"transparent\", alignItems: \"center\"}}\n        >\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1}}>\n            Chats\n          </Typography>\n        </AppBar>\n        <div className=\"chat-container\">\n          <div className=\"msg\">\n            <ol id=\"messages\">{messages.map(renderMessages)}</ol>\n            <div ref={messageRef}></div>\n          </div>\n\n          <div className={displayEmoji}>\n            <Picker onEmojiClick={onEmojiClick} />\n          </div>\n        </div>\n        <div id=\"form\" className=\"textField\">\n          <label htmlFor=\"raised-button-file\">\n            <input\n              accept=\"image/*\"\n              onChange={selectFile}\n              style={{ display: \"none\" }}\n              id=\"raised-button-file\"\n              multiple\n              type=\"file\"\n            />\n            <IconButton\n              className=\"camera\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n            >\n              <PhotoCamera />\n            </IconButton>\n          </label>\n\n          {/* <label htmlFor=\"raised-button-file\">\n            <input\n              accept=\"image/*\"\n              onChange={selectFile}\n              style={{ display: \"none\" }}\n              id=\"raised-button-files\"\n              multiple\n              type=\"file\"\n            />\n            <IconButton aria-label=\"upload picture\" component=\"span\">\n              <AttachFileIcon />\n            </IconButton>\n          </label> */}\n\n          <label>\n            <IconButton aria-label=\"emoji\" component=\"span\" onClick={disEmoji}>\n              <InsertEmoticonSharpIcon />\n            </IconButton>\n          </label>\n\n          <input\n            id=\"message\"\n            placeholder=\"Enter message here\"\n            value={newMessage}\n            onChange={handleNewMessageChange}\n            onKeyUp={handleKeyUp}\n          />\n\n          {/* <TextField\n          id=\"message\"\n          label=\"Enter message here\"\n          variant=\"outlined\"\n          value={newMessage}\n          onChange={handleNewMessageChange}\n          onKeyUp={handleKeyUp}\n          style={{width: \"100%\"}}\n        /> */}\n\n          <button onClick={handleSendMessage}>\n            <SendIcon />\n          </button>\n        </div>\n      </div>\n    </div>\n    // </div>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport { useState} from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport MicOffIcon from \"@mui/icons-material/MicOff\";\nimport VideocamIcon from \"@mui/icons-material/Videocam\";\nimport VideocamOffIcon from \"@mui/icons-material/VideocamOff\";\nimport MessageIcon from \"@mui/icons-material/Message\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\n// import PanToolIcon from \"@mui/icons-material/PanTool\";\n// import PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport CallEndIcon from \"@mui/icons-material/CallEnd\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport ScreenShareIcon from '@mui/icons-material/ScreenShare';\nimport StopScreenShareIcon from '@mui/icons-material/StopScreenShare';\n\nimport Snackbar from \"@mui/material/Snackbar\";\n\nexport default function MenuBar({\n  handleLogout,\n  handleAudioMute,\n  handleAudioUnmute,\n  handleVideoMute,\n  handleVideoUnmute,\n  showChat,\n  roomName,\n  handleScreenShare\n}) {\n  const [audio, setAudio] = useState(true);\n  const [camera, setCamera] = useState(true);\n  const [message, setMessage] = useState(true);\n  // const [raiseHand, setRaiseHand] = useState(false);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const audioToggle = () => {\n    if (audio === false) {\n      setAudio(true);\n      handleAudioUnmute();\n    } else if (audio === true) {\n      setAudio(false);\n      handleAudioMute();\n    }\n  };\n\n  const cameraToggle = () => {\n    if (camera === false) {\n      setCamera(true);\n      handleVideoUnmute();\n    } else if (camera === true) {\n      setCamera(false);\n      handleVideoMute();\n    }\n  };\n\n  const messageToggle = () => {\n    if (message === false) {\n      setMessage(true);\n      showChat();\n    } else if (message === true) {\n      setMessage(false);\n      showChat();\n    }\n  };\n\n  const screenSharingToggle = () => {\n    if (screenSharing === false) {\n      setScreenSharing(true);\n      handleScreenShare(true);\n    } else if (screenSharing === true) {\n      setScreenSharing(false);\n      handleScreenShare(false);\n    }\n  };\n\n  // const raiseHandToggle = () => {\n  //   if (raiseHand === false) {\n  //     setRaiseHand(true);\n  //     // handleVideoUnmute();\n  //   } else if (raiseHand === true) {\n  //     setRaiseHand(false);\n  //     // handleVideoMute();\n  //   }\n  // };\n\n  const invitemorepeople = () => {\n    navigator.clipboard.writeText(\n      `Joins Meeting info \\nVideo call link: https://abhinav-22-tech.github.io/Joins-Meeting-App/ \\nRoom Code: ${roomName}`\n    );\n    setOpenSnackbar(true);\n  };\n\n  const handleCloseSnackBar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const iconOfSnackBar = (\n    <React.Fragment>\n      <ContentCopyIcon sx={{ color: \"white\" }} />\n    </React.Fragment>\n  );\n\n  return (\n    <Box>\n      <Box\n        component=\"span\"\n        sx={{\n          backgroundColor: \"#141414\",\n          m: \"auto\",\n          p: 2,\n          borderRadius: 3,\n          boxShadow: 24,\n        }}\n        display=\"flex\"\n        width={430}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Button onClick={audioToggle} sx={{ color: \"white\" }}>\n          {audio === true ? (\n            <MicIcon sx={{ color: \"#00a389\" }} />\n          ) : (\n            <MicOffIcon sx={{ color: \"white\" }} />\n          )}\n        </Button>\n        <Button onClick={cameraToggle} sx={{ color: \"white\" }}>\n          {camera === true ? (\n            <VideocamIcon sx={{ color: \"#00a389\" }} />\n          ) : (\n            <VideocamOffIcon sx={{ color: \"white\" }} />\n          )}\n        </Button>\n        <Button onClick={messageToggle} sx={{ color: \"white\" }}>\n          {message === true ? (\n            <MessageIcon sx={{ color: \"#972ab5\" }} />\n          ) : (\n            <ChatBubbleOutlineIcon sx={{ color: \"white\" }} />\n          )}\n        </Button>\n        <Button onClick={screenSharingToggle} sx={{ color: \"white\" }}>\n          {screenSharing === true ? (\n            <ScreenShareIcon sx={{ color: \"#3277a8\" }} />\n          ) : (\n            <StopScreenShareIcon sx={{ color: \"white\" }} />\n          )}\n        </Button>\n        {/* <Button onClick={raiseHandToggle} sx={{ color: \"white\" }}>\n          {raiseHand === true ? (\n            <PanToolIcon sx={{ color: \"#00a389\" }} />\n          ) : (\n            <PanToolIcon sx={{ color: \"white\" }} />\n          )}\n        </Button> */}\n        {/* <Button sx={{ color: \"white\" }}>\n          <PeopleAltIcon />\n        </Button> */}\n        <Button sx={{ color: \"white\" }} onClick={invitemorepeople}>\n          <PersonAddAlt1Icon />\n        </Button>\n        <Button sx={{ color: \"white\" }}>\n          <MoreHorizIcon />\n        </Button>\n        <Button\n          onClick={handleLogout}\n          sx={{\n            backgroundColor: \"#fc0303\",\n            \":hover\": { backgroundColor: \"#fa3939\" },\n            color: \"white\",\n          }}\n        >\n          <CallEndIcon />\n        </Button>\n      </Box>\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackBar}\n        action={iconOfSnackBar}\n        message=\"Successfully copied!\"\n      />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Participant from \"../Participant/Participant\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\n\nimport \"./Room.css\";\nimport MenuBar from \"../MenuBar/MenuBar\";\n\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\n\nconst Room = ({\n  roomName,\n  room,\n  handleLogout,\n  currentUser,\n  handleAudioMute,\n  handleAudioUnmute,\n  handleVideoMute,\n  handleVideoUnmute,\n  handleScreenShareStart,\n  handleScreenShareStop,\n  screenTrack\n}) => {\n  const [participants, setParticipants] = useState([]);\n  const [displayChat, setDisplayChat] = useState(true);\n  const [displayShareScreen, setDisplayShareScreen] = useState(false);\n  const [sizeofgrid1, setsizeofgrid1] = useState(9);\n  const [sizeofgrid2, setsizeofgrid2] = useState(3);\n  const [marginMenuBar, setMarginMenuBar] = useState(24);\n  // const { videoON, audioON } = useRoomContext();\n\n  useEffect(() => {\n    const participantConnected = (participant) => {\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = (participant) => {\n      setParticipants((prevParticipants) =>\n        prevParticipants.filter((p) => p !== participant)\n      );\n    };\n\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected);\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n\n  const remoteParticipants = participants.map((participant) => (\n    <Participant\n      key={participant.sid}\n      participant={participant}\n      currentUser={currentUser}\n    />\n  ));\n\n  // const screenShare  = () =>{\n  //   <Participant k/>\n  // }\n\n\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  }));\n\n  const showChat = () => {\n    if (displayChat === false) {\n      setDisplayChat(true);\n      setsizeofgrid1(9);\n      setsizeofgrid2(3);\n      setMarginMenuBar(24);\n    } else if (displayChat === true) {\n      setDisplayChat(false);\n      setsizeofgrid1(11);\n      setsizeofgrid2(0);\n      setMarginMenuBar(14);\n    }\n  };\n\n  const handleScreenShare = (displayScreen) => {\n    console.log(\"displayScreen : \" + displayScreen);\n    setDisplayShareScreen(displayScreen);\n    if (displayScreen === true) {\n      handleScreenShareStart();\n    } else {\n      handleScreenShareStop();\n    }\n  };\n\n  return (\n    <main className=\"room\">\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={sizeofgrid1}>\n            <Box sx={{ flexGrow: 1 }}>\n              <Grid container spacing={2} columns={16}>\n                <Grid item xs={7.5} key=\"1\">\n                  <Box sx={{ boxShadow: 24 }}>\n                    {room ? (\n                      <Participant\n                        totalParticipant={participants}\n                        key={room.localParticipant.sid}\n                        participant={room.localParticipant}\n                      />\n                    ) : (\n                      \"\"\n                    )}\n                  </Box>\n                </Grid>\n                <Grid item xs={7.5} key=\"2\">\n                  <Box sx={{ boxShadow: 24 }}>{remoteParticipants}</Box>\n                </Grid>\n              </Grid>\n              <Box>\n                {displayShareScreen === true ? (\n                  <Grid>\n                    <Box sx={{ backgroundColor: \"white\" }}>\n                      <Participant\n                        totalParticipant={participants}\n                        key={room.localParticipant.sid}\n                        participant={room.localParticipant}\n                      />\n                    </Box>\n                  </Grid>\n                ) : (\n                  \"\"\n                )}\n              </Box>\n              <Box sx={{ mt: marginMenuBar }}>\n                <MenuBar\n                  handleLogout={handleLogout}\n                  handleAudioMute={handleAudioMute}\n                  handleAudioUnmute={handleAudioUnmute}\n                  handleVideoMute={handleVideoMute}\n                  handleVideoUnmute={handleVideoUnmute}\n                  roomName={roomName}\n                  showChat={showChat}\n                  handleScreenShare={handleScreenShare}\n                />\n              </Box>\n            </Box>\n          </Grid>\n          {displayChat === true ? (\n            <Grid item xs={sizeofgrid2}>\n              <Box sx={{ backgroundColor: \"white\" }}>\n                <ChatRoom roomId={roomName} />\n              </Box>\n            </Grid>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n      </Box>\n\n      {/* <TopHeader\n        participants={participants}\n        participant={room.localParticipant}\n      /> */}\n      {/* <div className=\"all-participants\">\n        {room ? (\n          <Participant\n            totalParticipant={participants}\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n          />\n        ) : (\n          \"\"\n        )}\n        {remoteParticipants}\n      </div> */}\n      {/* \n      <div className=\"chatRoom\">\n        <div className={displayChat}>\n          <ChatRoom roomId={roomName} />\n        </div>\n      </div> */}\n    </main>\n  );\n};\n\nexport default Room;\n","import {\n  Avatar,\n  Badge,\n  Button,\n  Popover,\n  TextField,\n  Divider,\n  InputAdornment,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentTest,\n  DialogTitle,\n  Slide,\n  DialogContentText,\n  IconButton,\n} from \"@mui/material\";\nimport {\n  CameraAltOutlined,\n  FeedbackOutlined,\n  HelpOutline,\n  PersonOutlined,\n  Settings,\n  Apps,\n  VideoCallOutlined,\n  Keyboard,\n} from \"@mui/icons-material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { auth } from \"../../lib/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./home.css\";\nimport Video from \"twilio-video\";\nimport Room from \"../Room/Room\";\n\nconst { createLocalVideoTrack } = require(\"twilio-video\");\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() => ({\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction Home() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const [appState, setAppState] = useState(\"empty\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [date, setDate] = useState(new Date());\n\n  const [roomName, setRoomName] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const nameFirstChar =\n    currentUser?.displayName !== null\n      ? currentUser?.displayName.charAt(0).toUpperCase()\n      : \"\";\n\n  function stringToColor() {\n    var str = currentUser?.displayName + \"\";\n    var s = 50;\n    var l = 50;\n    var hash = 0;\n    for (var i = 0; i < str.length; i++)\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n\n    var h = hash % 360;\n    return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user);\n        setAppState(\"home\");\n        // console.log(\"currentUser: \" + user);\n        console.log(user.isAnonymous);\n      } else {\n        setCurrentUser(null);\n        setAppState(\"login\");\n      }\n    });\n\n    const timer = setInterval(() => setDate(new Date()), 1000);\n    return timer;\n  }, []);\n\n  useEffect(() => {\n    if (currentUser) {\n      setUsername(currentUser.displayName);\n    }\n  }, [currentUser]);\n\n  function randomRoom() {\n    let uuid = Date.now();\n    console.log(uuid);\n    uuid = Math.floor(\n      Math.random() * Math.floor(Math.random() * uuid.toString().slice(-9))\n    );\n    uuid =\n      uuid.toString().substring(0, 3) +\n      \"-\" +\n      uuid.toString().substring(3, 6) +\n      \"-\" +\n      uuid.toString().substring(6, uuid.toString().length);\n    console.log(uuid);\n    setRoomName(uuid);\n  }\n\n  const [backDropOpen, setBackDropOpen] = React.useState(false);\n  const backDrophandleClose = () => {\n    setBackDropOpen(false);\n  };\n  const backDropHandleToggle = () => {\n    setBackDropOpen(!backDropOpen);\n  };\n\n  const linkToRoom = () => {\n    backDropHandleToggle();\n    if (roomName !== \"\") {\n      console.log(currentUser.displayName);\n      if (currentUser.isAnonymous && currentUser.displayName === \"\") {\n        GuestLogin();\n        handleSubmit();\n      } else handleSubmit();\n    }\n  };\n\n  function GuestLogin() {\n    // const [open, setOpen] = React.useState(false);\n\n    // const handleClickOpen = () => {\n    //   setOpen(true);\n    // };\n\n    // const handleClose = () => {\n    //   setOpen(false);\n    // };\n\n    currentUser\n      .updateProfile({\n        displayName: \"Abhinav\",\n      })\n      .then(\n        function () {\n          // Profile updated successfully!\n          var displayName = currentUser.displayName;\n          console.log(`Display Name: ${displayName}`);\n        },\n        function (error) {\n          // An error happened.\n          console.log(`Guest Login Error: ${error}`);\n        }\n      );\n    // setUsername(\"Abhinav\");\n    // console.log(currentUser.displayName);\n  }\n\n  const siginOut = () => {\n    if (currentUser.isAnonymous) currentUser.delete();\n    auth.signOut();\n  };\n\n  const handleSubmit = useCallback(async () => {\n    const data = await fetch(\n      \"https://twilio-meeting-server.herokuapp.com/video/token\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          identity: username,\n          room: roomName,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => res.json());\n    Video.connect(data.token, {\n      name: roomName,\n    })\n      .then((room) => {\n        setRoom(room);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    console.log(data);\n  }, [roomName, username]);\n\n  const handleLogout = useCallback(() => {\n    backDrophandleClose();\n    setRoom((prevRoom) => {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\n          trackPub.track.stop();\n        });\n        prevRoom.disconnect();\n      }\n      return null;\n    });\n  }, []);\n\n  const handleAudioMute = () => {\n    room.localParticipant.audioTracks.forEach((publication) =>\n      publication.track.disable()\n    );\n  };\n\n  const handleAudioUnmute = () => {\n    room.localParticipant.audioTracks.forEach((publication) =>\n      publication.track.enable()\n    );\n  };\n\n  const handleVideoMute = () => {\n    room.localParticipant.videoTracks.forEach((publication) =>\n      publication.track.disable()\n    );\n    // room.localParticipant.videoTracks.forEach((publication) =>\n    //   publication.track.stop()\n    // );\n    // room.localParticipant.videoTracks.forEach((publication) =>\n    //   publication.unpublish()\n    // );\n  };\n\n  const handleVideoUnmute = () => {\n    // createLocalVideoTrack().then((localVideoTrack) => {\n    //   room.localParticipant.publishTrack(localVideoTrack);\n    // });\n    room.localParticipant.videoTracks.forEach((publication) =>\n      publication.track.enable()\n    );\n  };\n\n  let screenTrack;\n\n  const handleScreenShareStart = () => {\n    navigator.mediaDevices\n      .getDisplayMedia()\n      .then((stream) => {\n        screenTrack = new Video.LocalVideoTrack(stream.getTracks()[0]);\n        room.localParticipant.publishTrack(screenTrack);\n        // screenTrack.mediaStreamTrack.onended = () => {\n        // };\n        console.log(\"senctrack: \" + screenTrack);\n      })\n      .catch(() => {\n        alert(\"Could not share the screen.\");\n      });\n  };\n\n  const handleScreenShareStop = () => {\n    // room.localParticipant.unpublishTrack(screenTrack);\n    // screenTrack.stop();\n    console.log(\"Screen Shairing Stop\");\n  };\n\n  const invitemorepeople = () => {\n    navigator.clipboard.writeText(\n      `Joins Meeting info \\nVideo call link: https://abhinav-22-tech.github.io/Joins-Meeting-App/ \\nRoom Code: ${roomName}`\n    );\n    setOpenSnackbar(true);\n  };\n\n  const handleCloseSnackBar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const iconOfSnackBar = (\n    <React.Fragment>\n      <ContentCopyIcon sx={{ color: \"white\" }} />\n    </React.Fragment>\n  );\n\n  useEffect(() => {\n    if (room) {\n      const tidyUp = (event) => {\n        if (event.persisted) {\n          return;\n        }\n        if (room) {\n          handleLogout();\n        }\n      };\n      window.addEventListener(\"pagehide\", tidyUp);\n      window.addEventListener(\"beforeunload\", tidyUp);\n      return () => {\n        window.removeEventListener(\"pagehide\", tidyUp);\n        window.removeEventListener(\"beforeunload\", tidyUp);\n      };\n    }\n  }, [room, handleLogout]);\n\n  let render;\n  if (room) {\n    render = (\n      <Room\n        roomName={roomName}\n        room={room}\n        handleLogout={handleLogout}\n        currentUser={currentUser}\n        handleAudioMute={handleAudioMute}\n        handleAudioUnmute={handleAudioUnmute}\n        handleVideoMute={handleVideoMute}\n        handleVideoUnmute={handleVideoUnmute}\n        handleScreenShareStart={handleScreenShareStart}\n        handleScreenShareStop={handleScreenShareStop}\n        screenTrack={screenTrack}\n      />\n    );\n  } else {\n    render = (\n      <div>\n        <div className=\"home\">\n          <div className=\"home__left\">\n            <div className=\"home__buttons\">\n              <Button\n                sx={{\n                  backgroundColor: \"#00a389\",\n                  \"&:hover\": { backgroundColor: \"#18c2a7\" },\n                }}\n                variant=\"contained\"\n                className=\"home__createBTN\"\n                onClick={randomRoom}\n              >\n                <VideoCallOutlined />\n                <p>New meeting</p>\n              </Button>\n\n              <TextField\n                className=\"home__input\"\n                variant=\"outlined\"\n                value={roomName}\n                onChange={(e) => setRoomName(e.target.value)}\n                placeholder=\"Enter a code or link\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Keyboard className=\"icon\" />\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <IconButton\n                        onClick={invitemorepeople}\n                        disabled={roomName === \"\"}\n                      >\n                        <ContentCopyIcon sx={{ color: \"black\" }} />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n              {/* <Link to={`/${roomName}`}> */}\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                className=\"home__joinBTN\"\n                disabled={roomName === \"\"}\n                onClick={linkToRoom}\n              >\n                Join\n              </Button>\n              {/* </Link> */}\n\n              {/* This signout button for development purpose */}\n\n              <Button\n                onClick={siginOut}\n                variant=\"outlined\"\n                className=\"home__signOut\"\n              >\n                Sign Out\n              </Button>\n            </div>\n            <div>\n              <Backdrop\n                sx={{\n                  color: \"#fff\",\n                  zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={backDropOpen}\n                // onClick={backDrophandleClose}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </div>\n          </div>\n        </div>\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={2000}\n          onClose={handleCloseSnackBar}\n          action={iconOfSnackBar}\n          message=\"Successfully copied!\"\n        />\n      </div>\n    );\n  }\n\n  return render;\n}\n\nexport default Home;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport Continuewith from \"./components/Continuewith/Continuewith\";\nimport Home from \"./components/Home/home\";\n// import ChatRoom from \"./components/ChatRoom/ChatRoom\";\n// import Main from \"./components/Main/Main\";\n\nimport { auth } from \"./lib/firebase\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [appState, setAppState] = useState(\"empty\");\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user);\n        setAppState(\"home\");\n      } else {\n        setCurrentUser(null);\n        setAppState(\"login\");\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/Joins-Meeting-App\" exact>\n            <div>\n              {appState === \"empty\" && <p>Loading....</p>}\n              {appState === \"home\" && <Home />}\n              {appState === \"login\" && <Continuewith />}\n            </div>\n          </Route>\n          {/* <Route exact path=\"/:roomId\" component={Main}></Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}