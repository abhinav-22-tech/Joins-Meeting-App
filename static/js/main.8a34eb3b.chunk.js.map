{"version":3,"sources":["components/Continuewith/Continuewith.js","lib/firebase.js","components/Participant/Participant.js","components/ChatRoom/useChatRoom.js","components/ChatRoom/Image.js","components/ChatRoom/ChatRoom.js","components/Room/Room.js","components/Home/home.js","components/Main/Main.js","App.js","index.js"],"names":["Continuewith","state","isSignedIn","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","className","this","firebaseAuth","style","backgroundColor","onClick","signInAnonymously","then","catch","error","code","message","class","color","verticalAlign","Component","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Participant","participant","totalParticipant","currentUser","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","length","identity","ref","autoPlay","NEW_MESSAGE_EVENT","useChatRoom","roomId","messages","setMessages","socketRef","socketIOClient","query","incomingMessage","isOwner","senderId","id","disconnect","sendMessage","messageBody","file","emit","body","type","mimeType","fileName","name","Image","props","imageSrc","setImageSrc","reader","FileReader","readAsDataURL","blob","onloadend","result","width","height","src","alt","Room","useChat","newMessage","setNewMessage","setFile","setChosenEmoji","displayEmoji","setDisplayEmoji","messageRef","handleSendMessage","scrollIntoView","behavior","i","Blob","componentDecorator","decoratedHref","decoratedText","href","onEmojiClick","event","emojiObject","emoji","htmlFor","accept","onChange","e","target","files","display","multiple","IconButton","component","PhotoCamera","placeholder","value","onKeyUp","key","roomName","room","handleLogout","participants","setParticipants","displayChat","console","log","participantConnected","prevParticipants","participantDisconnected","p","forEach","off","remoteParticipants","sid","localParticipant","theme","createTheme","useStyles","makeStyles","large","spacing","Home","setCurrentUser","setAppState","anchorEl","Date","setDate","setRoomName","setRoom","username","setUsername","useHistory","Boolean","displayName","charAt","toUpperCase","setInterval","email","handleSubmit","useCallback","fetch","method","JSON","stringify","headers","res","json","data","Video","connect","token","err","prevRoom","tracks","trackPub","stop","tidyUp","persisted","window","addEventListener","removeEventListener","Button","variant","uuid","now","Math","floor","random","toString","slice","substring","VideoCallOutlined","TextField","InputProps","startAdornment","InputAdornment","position","Keyboard","disabled","signOut","root","background","Main","App","appState","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a34eb3b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\r\nimport \"./Continuewith.css\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\n// import logo from \"../../images/X-oo.svg\";\r\n\r\nclass Continuewith extends Component {\r\n  state = { isSignedIn: false };\r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false,\r\n    },\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ isSignedIn: !!user });\r\n      // console.log(\"user\", user);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const anonSignIn = () => {\r\n      // [START auth_anon_sign_in]\r\n      firebase\r\n        .auth()\r\n        .signInAnonymously()\r\n        .then(() => {\r\n          // Signed in..\r\n        })\r\n        .catch((error) => {\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          // ...\r\n        });\r\n      // [END auth_anon_sign_in]\r\n    };\r\n\r\n    return (\r\n      <div className=\"continueWith\">\r\n        {this.state.isSignedIn ? (\r\n          <span></span>\r\n        ) : (\r\n          <div className=\"continueWith__content\">\r\n            <p className=\"continueWith__title\">Sign in</p>\r\n            <p className=\"continueWith__subtitle\">Continue to Joins</p>\r\n\r\n            <StyledFirebaseAuth\r\n              uiConfig={this.uiConfig}\r\n              firebaseAuth={firebase.auth()}\r\n            />\r\n\r\n            <div className=\"continueWith__try_text\">Try demo</div>\r\n            <button\r\n              className=\"firebaseui-idp-button mdl-button mdl-js-button mdl-button--raised firebaseui-id-idp-button\"\r\n              style={{ backgroundColor: \"red\" }}\r\n              data-upgraded=\",MaterialButton\"\r\n              onClick={anonSignIn}\r\n            >\r\n              <span class=\"firebaseui-idp-icon-wrapper\">\r\n                <AccountCircleIcon\r\n                  style={{ color: \"white\", verticalAlign: \"middle\" }}\r\n                />\r\n              </span>\r\n              <span class=\"firebaseui-idp-text firebaseui-idp-text-long\">\r\n                Sign in As Guest\r\n              </span>\r\n              <span class=\"firebaseui-idp-text firebaseui-idp-text-short\">\r\n                GitHub\r\n              </span>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Continuewith;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAswSs5I_Ow2zqhEKy1cfpZTLS8sy7PYsA\",\r\n  authDomain: \"meeting-3ecfa.firebaseapp.com\",\r\n  projectId: \"meeting-3ecfa\",\r\n  storageBucket: \"meeting-3ecfa.appspot.com\",\r\n  messagingSenderId: \"940410080677\",\r\n  appId: \"1:940410080677:web:dad8c866e2b666c92c6c4c\",\r\n  measurementId: \"G-7QHJGCKWLK\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Participant.css\";\r\n// import { useAppContext } from \"../../context/appContext\";\r\n// import { useRoomContext } from \"../../context/videoContext\";\r\n\r\nconst Participant = ({ participant, totalParticipant, currentUser }) => {\r\n  const [videoTracks, setVideoTracks] = useState([]);\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n\r\n  // const { videoON } = useRoomContext();\r\n  // const { currentUser } = useAppContext();\r\n\r\n  const videoRef = useRef();\r\n  const audioRef = useRef();\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null);\r\n\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\r\n\r\n    const trackSubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\r\n      }\r\n    };\r\n\r\n    const trackUnsubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\r\n      }\r\n    };\r\n\r\n    participant.on(\"trackSubscribed\", trackSubscribed);\r\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\r\n\r\n    return () => {\r\n      setVideoTracks([]);\r\n      setAudioTracks([]);\r\n      participant.removeAllListeners();\r\n    };\r\n  }, [participant]);\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0];\r\n    if (videoTrack) {\r\n      videoTrack.attach(videoRef.current);\r\n      return () => {\r\n        videoTrack.detach();\r\n      };\r\n    }\r\n  }, [videoTracks]);\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0];\r\n    if (audioTrack) {\r\n      audioTrack.attach(audioRef.current);\r\n      return () => {\r\n        audioTrack.detach();\r\n      };\r\n    }\r\n  }, [audioTracks]);\r\n\r\n  return (\r\n    <div\r\n      className={`participant ${\r\n        totalParticipant?.length === 0 && \"one_participant\"\r\n      }`}\r\n    >\r\n      <p className=\"participant-name\">\r\n        {participant.identity === currentUser ? \"You\" : participant.identity}\r\n      </p>\r\n      <video ref={videoRef} autoPlay={true} />\r\n      <audio ref={audioRef} autoPlay={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst NEW_MESSAGE_EVENT = \"new-message-event\";\r\nconst SOCKET_SERVER_URL = \"https://trishul-meeting-server.herokuapp.com/\";\r\n// const SOCKET_SERVER_URL = \"localhost:3030\";\r\n\r\nconst useChatRoom = (roomId) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n      query: { roomId },\r\n    });\r\n\r\n    socketRef.current.on(NEW_MESSAGE_EVENT, (message) => {\r\n      const incomingMessage = {\r\n        ...message,\r\n        isOwner: message.senderId === socketRef.current.id,\r\n      };\r\n      setMessages((messages) => [...messages, incomingMessage]);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (messageBody, file) => {\r\n    if (file) {\r\n      socketRef.current.emit(NEW_MESSAGE_EVENT, {\r\n        body: file,\r\n        type: \"file\",\r\n        mimeType: file.type,\r\n        fileName: file.name,\r\n        senderId: socketRef.current.id,\r\n      });\r\n    } else {\r\n      socketRef.current.emit(NEW_MESSAGE_EVENT, {\r\n        body: messageBody,\r\n        senderId: socketRef.current.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  return { messages, sendMessage };\r\n};\r\n\r\nexport default useChatRoom;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"./Image.css\"\r\n\r\nfunction Image(props) {\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(props.blob);\r\n    reader.onloadend = function () {\r\n      setImageSrc(reader.result);\r\n    };\r\n  }, [props.blob]);\r\n\r\n  return (\r\n    <img\r\n      className=\"image\"\r\n      style={{ width: 150, height: \"auto\" }}\r\n      src={imageSrc}\r\n      alt={props.fileName}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { SecureLink } from \"react-secure-link\";\r\n\r\nimport useChat from \"./useChatRoom\";\r\nimport \"./ChatRoom.css\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { EmojiEmotionsSharp, PhotoCamera } from \"@mui/icons-material\";\r\n// import AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport { Button, IconButton, TextField } from \"@mui/material\";\r\nimport InsertEmoticonSharpIcon from \"@mui/icons-material/InsertEmoticonSharp\";\r\nimport Image from \"./Image\";\r\n\r\nimport Picker from \"emoji-picker-react\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nconst Room = ({ roomId }) => {\r\n  // const { roomId } = props.match.params;\r\n  const { messages, sendMessage } = useChat(roomId);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [file, setFile] = useState();\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [displayEmoji, setDisplayEmoji] = useState(\"notDisplayEmoji\");\r\n  const messageRef = useRef();\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage !== \"\") {\r\n      sendMessage(newMessage, file);\r\n      setNewMessage(\"\");\r\n      setFile();\r\n      setDisplayEmoji(\"notDisplayEmoji\");\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const selectFile = (e) => {\r\n    setNewMessage(e.target.files[0].name);\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const renderMessages = (message, i) => {\r\n    if (message.type === \"file\") {\r\n      const blob = new Blob([message.body], { type: message.type });\r\n      return (\r\n        <div\r\n          key={i}\r\n          className={message.isOwner ? \"my-message\" : \"received-message\"}\r\n        >\r\n          <div className=\"msgBody\">\r\n            <Image fileName={message.fileName} blob={blob} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={i}\r\n        className={message.isOwner ? \"my-message\" : \"received-message\"}\r\n      >\r\n        <div className=\"msgBody\">\r\n          <Linkify\r\n            componentDecorator={(decoratedHref, decoratedText) => (\r\n              <SecureLink href={decoratedHref}>{decoratedText}</SecureLink>\r\n            )}\r\n          >\r\n            {message.body}\r\n          </Linkify>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setNewMessage(newMessage + emojiObject.emoji);\r\n    setChosenEmoji(emojiObject);\r\n  };\r\n\r\n  const disEmoji = () => {\r\n    if (displayEmoji === \"notDisplayEmoji\") setDisplayEmoji(\"displayEmoji\");\r\n    else if (displayEmoji === \"displayEmoji\")\r\n      setDisplayEmoji(\"notDisplayEmoji\");\r\n  };\r\n\r\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\r\n\r\n  return (\r\n    // <div className=\"msg_container\">\r\n    <div className=\"chatbox\">\r\n      <div className=\"chatRoomMain\">\r\n        <div className=\"group_chat_bar\">\r\n          <span className=\"group_chat_title\">Group Chat</span>\r\n          <span className=\"group_chat_msg_btn\">Messages</span>\r\n          <span className=\"group_chat_partici\">Participants</span>\r\n        </div>\r\n        <div className=\"chat-container\">\r\n          <div className=\"msg\">\r\n            <ol id=\"messages\">{messages.map(renderMessages)}</ol>\r\n            <div ref={messageRef}></div>\r\n          </div>\r\n\r\n          <div className={displayEmoji}>\r\n            <Picker onEmojiClick={onEmojiClick} />\r\n          </div>\r\n        </div>\r\n        <div id=\"form\" className=\"textField\">\r\n          <label htmlFor=\"raised-button-file\">\r\n            <input\r\n              accept=\"image/*\"\r\n              onChange={selectFile}\r\n              style={{ display: \"none\" }}\r\n              id=\"raised-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n            />\r\n            <IconButton\r\n              className=\"camera\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n\r\n          {/* <label htmlFor=\"raised-button-file\">\r\n            <input\r\n              accept=\"image/*\"\r\n              onChange={selectFile}\r\n              style={{ display: \"none\" }}\r\n              id=\"raised-button-files\"\r\n              multiple\r\n              type=\"file\"\r\n            />\r\n            <IconButton aria-label=\"upload picture\" component=\"span\">\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </label> */}\r\n\r\n          <label>\r\n            <IconButton aria-label=\"emoji\" component=\"span\" onClick={disEmoji}>\r\n              <InsertEmoticonSharpIcon />\r\n            </IconButton>\r\n          </label>\r\n\r\n          <input\r\n            id=\"message\"\r\n            placeholder=\"Enter message here\"\r\n            value={newMessage}\r\n            onChange={handleNewMessageChange}\r\n            onKeyUp={handleKeyUp}\r\n          />\r\n\r\n          {/* <TextField\r\n          id=\"message\"\r\n          label=\"Enter message here\"\r\n          variant=\"outlined\"\r\n          value={newMessage}\r\n          onChange={handleNewMessageChange}\r\n          onKeyUp={handleKeyUp}\r\n          style={{width: \"100%\"}}\r\n        /> */}\r\n\r\n          <button onClick={handleSendMessage}>\r\n            <SendIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Participant from \"../Participant/Participant\";\r\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\r\n\r\nimport \"./Room.css\";\r\n\r\nconst Room = ({ roomName, room, handleLogout, currentUser }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [displayChat, setDisplayChat] = useState(\"displayChat\");\r\n  \r\n  // const { videoON, audioON } = useRoomContext();\r\n\r\n  console.log(participants);\r\n  useEffect(() => {\r\n    const participantConnected = (participant) => {\r\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\r\n    };\r\n\r\n    const participantDisconnected = (participant) => {\r\n      setParticipants((prevParticipants) =>\r\n        prevParticipants.filter((p) => p !== participant)\r\n      );\r\n    };\r\n\r\n    room.on(\"participantConnected\", participantConnected);\r\n    room.on(\"participantDisconnected\", participantDisconnected);\r\n    room.participants.forEach(participantConnected);\r\n    return () => {\r\n      room.off(\"participantConnected\", participantConnected);\r\n      room.off(\"participantDisconnected\", participantDisconnected);\r\n    };\r\n  }, [room]);\r\n\r\n  const remoteParticipants = participants.map((participant) => (\r\n    <Participant\r\n      key={participant.sid}\r\n      participant={participant}\r\n      currentUser={currentUser}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <main className=\"room\">\r\n      {/* <TopHeader\r\n        participants={participants}\r\n        participant={room.localParticipant}\r\n      /> */}\r\n      <div className=\"all-participants\">\r\n        {room ? (\r\n          <Participant\r\n            totalParticipant={participants}\r\n            key={room.localParticipant.sid}\r\n            participant={room.localParticipant}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {remoteParticipants}\r\n      </div>\r\n\r\n      <div className=\"chatRoom\">\r\n        <div className={displayChat}>\r\n          <ChatRoom roomId={roomName} />\r\n        </div>\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Popover,\r\n  TextField,\r\n  Divider,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAltOutlined,\r\n  FeedbackOutlined,\r\n  HelpOutline,\r\n  PersonOutlined,\r\n  Settings,\r\n  Apps,\r\n  VideoCallOutlined,\r\n  Keyboard,\r\n} from \"@mui/icons-material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { auth } from \"../../lib/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport Video from \"twilio-video\";\r\nimport Room from \"../Room/Room\";\r\n\r\nconst theme = createTheme();\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const [appState, setAppState] = useState(\"empty\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [room, setRoom] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  const nameFirstChar =\r\n    currentUser?.displayName !== null\r\n      ? currentUser?.displayName.charAt(0).toUpperCase()\r\n      : \"S\";\r\n\r\n  function stringToColor() {\r\n    var str = currentUser?.displayName + \"\";\r\n    var s = 50;\r\n    var l = 50;\r\n    var hash = 0;\r\n    for (var i = 0; i < str.length; i++)\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n\r\n    var h = hash % 360;\r\n    return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setCurrentUser(user);\r\n        setAppState(\"home\");\r\n        // console.log(user.isAnonymous);\r\n      } else {\r\n        setCurrentUser(null);\r\n        setAppState(\"login\");\r\n      }\r\n    });\r\n\r\n    const timer = setInterval(() => setDate(new Date()), 1000);\r\n    return timer;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setUsername(currentUser.email);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  function randomRoom() {\r\n    let uuid = Date.now();\r\n    console.log(uuid);\r\n    uuid = Math.floor(\r\n      Math.random() * Math.floor(Math.random() * uuid.toString().slice(-9))\r\n    );\r\n    uuid =\r\n      uuid.toString().substring(0, 3) +\r\n      \"-\" +\r\n      uuid.toString().substring(3, 6) +\r\n      \"-\" +\r\n      uuid.toString().substring(6, uuid.toString().length);\r\n    console.log(uuid);\r\n    setRoomName(uuid);\r\n  }\r\n\r\n  const linkToRoom = () => {\r\n    if (roomName !== \"\") {\r\n      handleSubmit();\r\n      // history.push(`/${roomName}`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = useCallback(async () => {\r\n    const data = await fetch(\r\n      \"https://twilio-meeting-server.herokuapp.com/video/token\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          identity: username,\r\n          room: roomName,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then((res) => res.json());\r\n    Video.connect(data.token, {\r\n      name: roomName,\r\n    })\r\n      .then((room) => {\r\n        setRoom(room);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    console.log(data);\r\n  }, [roomName, username]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    setRoom((prevRoom) => {\r\n      if (prevRoom) {\r\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\r\n          trackPub.track.stop();\r\n        });\r\n        prevRoom.disconnect();\r\n      }\r\n      return null;\r\n    });\r\n  }, []);\r\n\r\n  // console.log(\"room name is\", roomName);\r\n  // console.log(\"username is\", username);\r\n\r\n  useEffect(() => {\r\n    if (room) {\r\n      const tidyUp = (event) => {\r\n        if (event.persisted) {\r\n          return;\r\n        }\r\n        if (room) {\r\n          handleLogout();\r\n        }\r\n      };\r\n      window.addEventListener(\"pagehide\", tidyUp);\r\n      window.addEventListener(\"beforeunload\", tidyUp);\r\n      return () => {\r\n        window.removeEventListener(\"pagehide\", tidyUp);\r\n        window.removeEventListener(\"beforeunload\", tidyUp);\r\n      };\r\n    }\r\n  }, [room, handleLogout]);\r\n\r\n  let render;\r\n  if (room) {\r\n    render = (\r\n      <Room\r\n        roomName={roomName}\r\n        room={room}\r\n        handleLogout={handleLogout}\r\n        currentUser={currentUser}\r\n      />\r\n    );\r\n  } else {\r\n    render = (\r\n      <div>\r\n        <div className=\"home\">\r\n          <div className=\"home__left\">\r\n            <div className=\"home__buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                className=\"home__createBTN\"\r\n                onClick={randomRoom}\r\n              >\r\n                <VideoCallOutlined />\r\n                <p>New meeting</p>\r\n              </Button>\r\n\r\n              <TextField\r\n                className=\"home__input\"\r\n                variant=\"outlined\"\r\n                value={roomName}\r\n                onChange={(e) => setRoomName(e.target.value)}\r\n                placeholder=\"Enter a code or link\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Keyboard className=\"icon\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n              {/* <Link to={`/${roomName}`}> */}\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                className=\"home__joinBTN\"\r\n                disabled={roomName === \"\"}\r\n                onClick={linkToRoom}\r\n              >\r\n                Join\r\n              </Button>\r\n              {/* </Link> */}\r\n\r\n              {/* This signout button for development purpose */}\r\n\r\n              <Button\r\n                onClick={() => auth.signOut()}\r\n                variant=\"outlined\"\r\n                className=\"home__signOut\"\r\n              >\r\n                Sign Out\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return render;\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\n// import ReactFullscreen from \"react-easyfullscreen\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\n\r\nimport \"./Main.css\";\r\nimport MessageIcon from \"@mui/icons-material/Message\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\r\nimport Room from \"../Room/Room\";\r\nimport Home from \"../Home/home\";\r\n\r\nimport MicIcon from \"@mui/icons-material/Mic\";\r\nimport MicOffIcon from \"@mui/icons-material/MicOff\";\r\nimport VideocamIcon from \"@mui/icons-material/Videocam\";\r\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\r\nimport CallEndIcon from \"@mui/icons-material/CallEnd\";\r\nimport VideocamOffIcon from \"@mui/icons-material/VideocamOff\";\r\nimport PausePresentationIcon from \"@mui/icons-material/PausePresentation\";\r\nimport ClosedCaptionIcon from \"@mui/icons-material/ClosedCaption\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n// import { style } from \"@mui/system\";\r\n// import { Fullscreen } from \"@mui/icons-material\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n  },\r\n});\r\n\r\nfunction Main(props) {\r\n  const [displayChat, setDisplayChat] = useState(\"notDisplayChat\");\r\n  const [mic, setMic] = useState(\"micOffClassIcon\");\r\n  const [micOff, setMicOff] = useState(\"\");\r\n  const [vid, setVid] = useState(\"vidOffClassIcon\");\r\n  const [vidOff, setVidOff] = useState(\"\");\r\n  const [share, setShare] = useState(\"shareOffClassIcon\");\r\n  const [shareOff, setShareOff] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [fullScreenMode, setfullScreenMode] = useState(false);\r\n  const [style, setStyle] = useState(\"cont\");\r\n\r\n  const displayChatRoom = () => {\r\n    if (displayChat === \"notDisplayChat\") setDisplayChat(\"displayChat\");\r\n    else if (displayChat === \"displayChat\") setDisplayChat(\"notDisplayChat\");\r\n  };\r\n\r\n  const switchAudio = () => {\r\n    if (mic !== \"\") setMic(\"\");\r\n    else if (mic === \"\") setMic(\"micOffClassIcon\");\r\n  };\r\n\r\n  const changeStyle = () => {\r\n    setStyle(\"cont2\");\r\n  };\r\n\r\n  const switchVideo = () => {\r\n    if (vid !== \"\") setVid(\"\");\r\n    else if (vid === \"\") setVid(\"vidOffClassIcon\");\r\n  };\r\n\r\n  const switchShare = () => {\r\n    if (share !== \"\") setShare(\"\");\r\n    else if (share === \"\") setShare(\"shareOffClassIcon\");\r\n  };\r\n\r\n  const handle = useFullScreenHandle();\r\n\r\n  const fullScreenToggler = () => {\r\n    if (fullScreenMode) {\r\n      setfullScreenMode(false);\r\n      handle.exit();\r\n    } else {\r\n      setfullScreenMode(true);\r\n      handle.enter();\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  console.log(props.match);\r\n  return (\r\n    <FullScreen handle={handle}>\r\n      <div className=\"main\">\r\n        {/* <div id=\"video-grid\"></div> */}\r\n        {/* <Video /> */}\r\n        {/* <Room roomName={props.match.params.roomId} room={room} handleLogout={handleLogout} /> */}\r\n        <div className=\"meetIcon\">\r\n          <div className=\"icons\">\r\n            <div className=\"mic\" onClick={changeStyle}>\r\n              <IconButton\r\n                onClick={switchAudio}\r\n                type=\"button\"\r\n                // style={{ color: \"white\", backgroundColor: \"#5F676A\" }}\r\n                className={classes.root}\r\n              >\r\n                <MicIcon\r\n                  // id=\"cont\"\r\n                  className={mic}\r\n                  // style={{ color: \"white\", backgroundColor: \"#5F676A\" }}\r\n                />\r\n                <MicOffIcon\r\n                  // id=\"cont1\"\r\n                  className={mic === \"\" ? \"micOffClassIcon\" : \"\"}\r\n                  // style={{ color: \"white\", backgroundColor: \"red\" }}\r\n                />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"vid\">\r\n              <IconButton\r\n                onClick={switchVideo}\r\n                type=\"button\"\r\n                style={{ color: \"white\", backgroundColor: \"#5F676A\" }}\r\n              >\r\n                <VideocamIcon className={vid} />\r\n                <VideocamOffIcon\r\n                  className={vid === \"\" ? \"vidOffClassIcon\" : \"\"}\r\n                />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <IconButton\r\n              onClick={fullScreenToggler}\r\n              style={{ color: \"red\", backgroundColor: \"#5F676A\" }}\r\n            >\r\n              <CallEndIcon />\r\n            </IconButton>\r\n            <IconButton style={{ color: \"#fff\", backgroundColor: \"#5F676A\" }}>\r\n              <ClosedCaptionIcon />\r\n            </IconButton>\r\n\r\n            <div className=\"share\">\r\n              <IconButton\r\n                onClick={switchShare}\r\n                type=\"button\"\r\n                style={{ color: \"white\", backgroundColor: \"#5F676A\" }}\r\n              >\r\n                <IosShareIcon\r\n                  className={share === \"\" ? \"shareOffClassIcon\" : \"\"}\r\n                />\r\n                <PausePresentationIcon className={share} />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <span className=\"time\">\r\n            {date.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}{\" \"}\r\n            •{\" \"}\r\n            {date.toLocaleDateString(undefined, {\r\n              weekday: \"short\",\r\n              month: \"short\",\r\n              day: \"numeric\",\r\n            })}\r\n          </span>\r\n          <span className=\"roomid\">{props.match.params.roomId}</span>\r\n        </div>\r\n        <div className=\"chatRoom\">\r\n          <div className={displayChat}>\r\n            <ChatRoom roomId={props.match.params.roomId} />\r\n          </div>\r\n        </div>\r\n        <div className=\"messageicon\">\r\n          <div className=\"msg\">\r\n            <IconButton\r\n              onClick={displayChatRoom}\r\n              aria-label=\"\"\r\n              component=\"span\"\r\n              style={{ color: \"white\", backgroundColor: \"#5F676A\" }}\r\n            >\r\n              <MessageIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FullScreen>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Continuewith from \"./components/Continuewith/Continuewith\";\r\nimport Home from \"./components/Home/home\";\r\n// import ChatRoom from \"./components/ChatRoom/ChatRoom\";\r\nimport Main from \"./components/Main/Main\";\r\n\r\nimport { auth } from \"./lib/firebase\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [appState, setAppState] = useState(\"empty\");\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setCurrentUser(user);\r\n        setAppState(\"home\");\r\n      } else {\r\n        setCurrentUser(null);\r\n        setAppState(\"login\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/Joins-Meeting-App\" exact>\r\n            <div>\r\n              {appState === \"empty\" && <p>Loading....</p>}\r\n              {appState === \"home\" && <Home />}\r\n              {appState === \"login\" && <Continuewith />}\r\n            </div>\r\n          </Route>\r\n          {/* <Route exact path=\"/:roomId\" component={Main}></Route> */}\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}